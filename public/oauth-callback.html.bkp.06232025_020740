<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GenoBank Auth - OAuth Callback</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/css/auth.css">
    
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
</head>
<body>
    <div class="container">
        <div class="row min-vh-100 align-items-center justify-content-center">
            <div class="col-12 col-md-6 col-lg-4">
                <div class="card shadow-lg border-0 rounded-4">
                    <div class="card-body p-5 text-center">
                        <div class="spinner-border text-primary mb-4" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <h5 class="mb-3">Processing Authentication</h5>
                        <p class="text-muted">Please wait while we complete your login...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Handle OAuth callback
        const params = new URLSearchParams(window.location.search);
        const code = params.get('code');
        const state = params.get('state');
        const error = params.get('error');
        const errorDescription = params.get('error_description');

        async function handleCallback() {
            if (error) {
                // OAuth error
                if (window.opener) {
                    window.opener.postMessage({
                        type: 'auth-error',
                        error: errorDescription || error
                    }, '*');
                    window.close();
                } else {
                    alert(errorDescription || error);
                    window.location.href = '/';
                }
                return;
            }

            if (!code) {
                // No code provided
                if (window.opener) {
                    window.opener.postMessage({
                        type: 'auth-error',
                        error: 'No authorization code received'
                    }, '*');
                    window.close();
                } else {
                    alert('No authorization code received');
                    window.location.href = '/';
                }
                return;
            }

            try {
                // Exchange code for tokens
                const response = await fetch('/auth/oauth/callback', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    credentials: 'include',
                    body: JSON.stringify({
                        code: code,
                        state: state,
                        provider: 'google' // Could be determined from state
                    })
                });

                const data = await response.json();

                if (data.success) {
                    // Success
                    if (window.opener) {
                        window.opener.postMessage({
                            type: 'auth-success',
                            user: data.user
                        }, '*');
                        window.close();
                    } else {
                        // Redirect based on state
                        let redirectUrl = 'https://genobank.app/dashboard';
                        
                        if (state) {
                            try {
                                const stateData = JSON.parse(atob(state));
                                if (stateData.returnUrl) {
                                    redirectUrl = stateData.returnUrl;
                                }
                            } catch (e) {
                                console.error('Invalid state parameter');
                            }
                        }
                        
                        window.location.href = redirectUrl;
                    }
                } else {
                    throw new Error(data.error || 'Authentication failed');
                }
            } catch (error) {
                console.error('OAuth callback error:', error);
                
                if (window.opener) {
                    window.opener.postMessage({
                        type: 'auth-error',
                        error: error.message
                    }, '*');
                    window.close();
                } else {
                    alert(error.message);
                    window.location.href = '/';
                }
            }
        }

        // Handle callback immediately
        handleCallback();
    </script>
</body>
</html>